  $(document).ready(function(){
  
  
  
			   ///////add commas function
  
			  function addCommas(val) {
				  if ((val>999)|| (val<-999) ){
					  while (/(\d+)(\d{3})/.test(val.toString())) {
						  val = val.toString().replace(/(\d+)(\d{3})/, '$1' + ',' + '$2');
					  }
				  }
				  return val;
			 }
  
  
  
  
  
			  /**
  
			   * Highcharts plugin for setting a lower opacity for other series than the one that is hovered
  
			   * in the legend
  
			   */
  
			  (function (Highcharts) {
  
				  var each = Highcharts.each;
  
  
  
				  Highcharts.wrap(Highcharts.Legend.prototype, 'renderItem', function (proceed, item) {
  
					  proceed.call(this, item);
  
					  var series = this.chart.series,
  
						  element = item.legendGroup.element;
  
					  element.onmouseover = function () {
  
						  each(series, function (seriesItem) {
  
							  if (seriesItem !== item) {
  
								  each(['group', 'markerGroup'], function (group) {
  
									  seriesItem[group].attr('opacity', 0.10);
  
								  });
  
							  }
  
						  });
  
					  }
  
					  element.onmouseout = function () {
  
						  each(series, function (seriesItem) {
  
							  if (seriesItem !== item) {
  
								  each(['group', 'markerGroup'], function (group) {
  
									  seriesItem[group].attr('opacity', 1);
  
								  });
  
							  }
  
						  });
  
					  }
  
  
  
				  });
  
			  }(Highcharts));
  
			  ///end gray out plugin
  
  
  
  
  
  
  
  
  
  
  
			  var chart2_chart = new Highcharts.Chart({
  
					  chart: {
  
						  renderTo: "chart2",
  
						  spacingLeft: 20,
  
						  spacingRight: 0,
  
						  // margin: [110, 60, 70, 70], //[top, right, bottom, left], the higher the number the more pushed in
  
						  marginBottom: 60,
  
						  marginTop: 70,
  
						  marginLeft: 50,
  
						  marginRight: 120,
  
						  borderColor: 'white',
  
						  plotBorderColor: 'none',
  
						  plotBorderWidth: 1,
  
						  defaultSeriesType: 'line', //line, bar, etc...
  
						  zoomType: null,
  
						  alignTicks: false,
						  
						  inverted: false
  
					  },
  
					  title: {
  
						  text: "Ratios of higher to lower earnings percentiles among full-time wage and salary workers age 16 years and over, 2014 dollars, 1979\u20132014",
  
  
						  align: 'left',
  
						  margin: 20,
  
						  x: 0,
  
						  style: {
  
							  color: '#000000',
  
							  fontFamily: 'sans-serif',
  
							  fontWeight: 'bold',
  
							  width: '540px',
  
							  fontSize: '14px'
  
  
  
						  }
  
					  },
  
  
  
					  subtitle: {
  
						  text: "",
  
						  align: 'left',
  
						  x: 0,
  
  
  
						  style: {
  
							  color: '#000000',
  
							  fontFamily: 'sans-serif',
  
							  fontWeight: 'normal',
  
							  backgroundColor: '#fff',
  
							  fontSize: '12px'
  
  
  
						  }
  
					  },
  
					  ///////series data//////////////////        
		  
///////series data//////////////////        

            series: [
			
			{
 "name": "90th to 10th ",
     "visible": true,
     "color": "rgb(0, 0, 255)",
     "dashStyle": "Solid",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [3.7,3.7,3.7,3.9,3.9,4,4.1,4.1,4.2,4.3,4.2,4.3,4.3,4.3,4.4,4.5,4.5,4.5,4.6,4.5,4.5,4.5,4.6,4.7,4.7,4.8,4.9,4.8,4.9,4.9,5,5,5,5.2,5.1,5],
     "_symbolIndex": 3
 }, {
	 
	 "name": "90th to 25th  ",
     "visible": true,
     "color": "rgb(255, 0, 0)",
     "dashStyle": "Solid",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [2.8,2.8,2.8,2.9,2.9,3,3,3,3,3.1,3,3.1,3.1,3.1,3.2,3.3,3.3,3.3,3.4,3.3,3.3,3.3,3.4,3.4,3.4,3.5,3.5,3.5,3.5,3.5,3.5,3.6,3.6,3.7,3.7,3.7],
     "_symbolIndex": 2
 }, {
 
 "name": "90th to 50th ",
     "visible": false,
     "color": "rgb(255, 0, 0)",
     "dashStyle": "LongDash",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [1.9,1.9,1.9,2,2,2,2,2,2,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.4,2.4,2.4,2.4,2.4,2.4],
     "_symbolIndex": 1
 }, {
	 
	 
 
     "name": "90th to 75th ",
     "visible": false,
     "color": "rgb(100, 100, 100)",
     "dashStyle": "LongDash",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [1.4,1.3,1.3,1.4,1.3,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.6,1.5,1.5],
     "_symbolIndex": 0
 }, {
     
     "name": "75th to 10th ",
     "visible": true,
     "color": "rgb(0, 255, 51)",
     "dashStyle": "Solid",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [2.7,2.7,2.8,2.8,2.9,2.9,3,2.9,3,3,3,3,3,3.1,3.1,3.2,3.2,3.2,3.1,3.1,3.1,3,3.1,3.1,3.2,3.2,3.2,3.2,3.2,3.3,3.3,3.3,3.3,3.4,3.3,3.3],
     "_symbolIndex": 1
	 
 }, {
	 "name": "75th to 25th ",
     "visible": true,
     "color": "rgb(103, 0, 220)",
     "dashStyle": "Solid",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [2.1,2.1,2.1,2.1,2.1,2.2,2.2,2.1,2.1,2.2,2.2,2.2,2.2,2.2,2.2,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.3,2.4,2.4,2.4,2.4],
     "_symbolIndex": 0
	 
 }, {
	 
     
     "name": "75th to 50th ",
     "visible": false,
     "color": "rgb(99, 0, 220)",
     "dashStyle": "DashDot",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [1.4,1.4,1.4,1.4,1.5,1.5,1.5,1.4,1.4,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.6,1.6,1.5,1.6,1.6,1.6,1.6],
     "_symbolIndex": 4
 }, {
     
	  "name": "50th to 10th ",
     "visible": true,
     "color": "rgb(100, 100, 100)",
     "dashStyle": "Solid",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [1.9,1.9,1.9,2,2,2,2,2,2.1,2.1,2.1,2,2,2,2.1,2.1,2.1,2.1,2.1,2,2,2,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1,2.1],
     "_symbolIndex": 3
 }, {
	 
	 
     
     "name": "50th to 25th ",
     "visible": false,
     "color": "rgb(0, 255, 0)",
     "dashStyle": "DashDot",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [1.4,1.4,1.4,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5,1.5],
     "_symbolIndex": 2
 }, {
    
     "name": "25th to 10th ",
     "visible": false,
     "color": "rgb(0, 0, 250)",
     "dashStyle": "DashDot",
     "type": "line",
     "lineWidth": 1.5,
     "marker": {
         "enabled": false
     },
     "data": [1.3,1.3,1.3,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4,1.4],
     "_symbolIndex": 4
 }],
  
					  ///////////////x axis/////////////////////
  
					  xAxis: {
  
						  title: {
  
							  text: '',
  
							  margin: 6,
  
  
  
							  style: {
  
								  color: '#000000',
  
								  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif',
  
								  fontWeight: 'normal',
  
								  backgroundColor: '#fff',
  
								  fontSize: '13px'
  
							  }
  
						  },
  
						  tickInterval: 5,
  
						  tickmarkPlacement: 'on',
  
  
  
					   //   tickPosition: 'outside',
  
						  lineWidth: 1.2,
  
						  lineColor: 'gray',
  
  
  
						  labels: {
  
							  //   formatter: function() {return Highcharts.numberFormat(this.value,0)},
  
  
  
							  formatter: function () {
  
								  var hideMonths = false;
  
								  if (hideMonths == true) {
  
									  return this.value.replace(/\D+/g, '');
  
								  } else {
  
									  return this.value;
  
								  }
  
							  },
  
							  rotation: 0,
  
							  //	overflow: 'justify',
  
							  // x: -2,
  
							  //   y: 18,
  
							  style: {
  
								  color: '#000000',
  
								  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif',
  
								  fontWeight: 'normal',
  
								  backgroundColor: '#fff',
  
								  fontSize: '12px'
  
							  }
  
						  },
  
						  plotBands: [],
  
  
  
						  categories: ["1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014"]
  
					  },
  
					  //end xaxis
  
  
  
					  //////////// Y AXIS ////////////////////////////////////
  
  
  
					  yAxis: [{
  
							  type: 'linear',
  
							  labels: {
  
  
  
								  formatter: function () {
  
									  ///////if butterfly chart ///////////////////////////
  
									  if (false == true) {
  
										  if (this.value > 0) { ///don't show positive values on this y axis for butterfly charts
  
											  return "";
  
										  } else {
  
											  return Math.abs(this.value);
  
										  }
  
										  /////////end if butterfly chart///////////
  
  
  
  
  
										  ///ALL Other types of charts , show all values at specified decimal and divisor ////////////////////////
  
									  } else {
  
  
  
										  if (true == true) { // if forced decimals chosen
  
											  return ' ' + Highcharts.numberFormat(this.value / 1, 0) + '';
  
										  } else {
  
											  return ' '+ addCommas(this.value / 1) + '';
  
										  }
  
  
  
									  }
  
									  /// end y axis formatter
  
  
  
								  },
  
								  style: {
  
									  color: '#000000',
  
									  fontWeight: 'normal',
  
									  backgroundColor: '#fff',
  
									  fontSize: '12px',
  
									  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif'
  
								  }
  
  
  
							  },
  
  
  
							  tickInterval: null,
  
							  tickWidth: 1,
  
							  lineWidth: 1,
  
							  lineColor: 'gray',
  
							  gridLineColor: '#c0c0c0',
  
							  gridLineWidth: 1.0,
  
							  gridLineDashStyle: 'Dot',
  
							  min: 0,
  
							  max: null,
  
							  plotLines: [{"value":0,"color":"#c0c0c0","dashStyle":"solid","width":1}],
  
  
  
							  title: {
  
								  align: 'high',
  
								  offset: 0,
  
								  text: '',
  
								  rotation: 0,
  
								  y: -15,
  
								  x: 35,
  
  
  
								  style: {
  
									  color: '#000000',
  
									  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif',
  
									  fontWeight: 'normal',
  
									  backgroundColor: '#fff',
  
									  fontSize: '13px'
  
								  }
  
							  }
  
  
  
  
  
	 },
  
	///second y axis (for recession or butterfly)
  
  
  
	{"max":20,"labels":{formatter: function() {if (this.value < 0){return "";}else{return Math.abs(this.value);}},"style":{"color":"#fff"}},"lineWidth":0,"gridLineWidth":0,"plotLines":null,"title":{"text":""},"linkedTo":0,"opposite":true,"index":1}
  
	//end second y axis
  
  
	 ],
  
  
  
					  ////////////////////LEGEND////////////////////
  
  
  
					  legend: {
  
						  layout: 'vertical',
  
						  //make vertical or horizontal
  
						  enabled: true,
  
						  backgroundColor: 'none',
  
						  borderWidth: 0,
  
						  borderColor: 'none',
  
						  shadow: false,
  
						  align: 'center',
  
						  //alignment of legend items
  
						  verticalAlign: 'top',
  
						  x: 230,
  
						  //Higher number moves legend right
  
						  y: 70,
  
						  //Higher number moves legend down
  
						  // width: 590,
  
						  //small widths will cause horizontal layouts to stack
  
						  floating: false,
  
						  //true makes legend independent of chart objects
  
						  reversed: false,
  
  
						  //reverses legend item order - handy to line up with column order
  
						  //  itemWidth: 195,
  
						  // symbolWidth: 30,
  
  
  
  
  
						  itemStyle: { //Three legend item styles for active, hover, and deselected - setting these specifically fixes browser differences
  
							  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif',
  
							  lineHeight: 1.2,
  
							  color: '#000080'
  
						  },
  
						  itemHiddenStyle: {
  
							  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif',
  
							  color: 'gray',
  
							  lineHeight: 1.2
  
						  },
  
						  itemHoverStyle: {
  
							  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif',
  
							  lineHeight: 1.2
  
							  //	,cursor: "default"  ///un note when legend click is disabled
  
						  }
  
					  },
  
  
  
					  ///////////////////////TOOLTIP///////////////////// (making from manual entry)
  
					  tooltip: {
  
						  backgroundColor: '#FCFFC5',
  
						  useHTML: true,
  
						  style: {
  
							  color: '#000000',
  
							  fontFamily: 'Calibri, Verdana, Arial, Helvetica, sans-serif'
  
						  },
  
						  //tooltip is what shows on hover
  
						  formatter: function () {
  
  
  
							  ///function to add absolute value for butterfly charts
  
							  var makeAbsoluteIfButterfly = function (val) {
  
								  if (false == true) { //if Butterfly == true?
  
									  return Math.abs(val);
  
								  } else {
  
									  return val;
  
								  }
  
							  }
  
  
  
  
  
							  //function to add dollarsigns if needed, and correctly do it for neg values
  
							  var negDollarFormat = function (val) {
  
								  if (false == true) { //if using dollars == true
  
									  ///convert to number again
  
									  val = Number(val.replace(/,/g, ""));
  
									  if (val >= 0) {
  
										  return "$" + Highcharts.numberFormat(val, 1);
  
									  } else {
  
										  return "-$" + Highcharts.numberFormat(Highcharts.numberFormat(Math.abs(val), 1), 1);
  
									  }
  
								  } else { ///not using dollars
  
									  return val;
  
								  }
  
							  }
  
  
  
							  if ('line' == "bubble" && this.series.xAxis.axisTitle && this.series.yAxis.axisTitle) {
  
								  var s = this.series.name + "<br>" + this.series.xAxis.axisTitle.text + ": <b>" + negDollarFormat(Highcharts.numberFormat(this.x * 1, 1)) + "</b><br>" + this.series.yAxis.axisTitle.text + ": <b>" + negDollarFormat(Highcharts.numberFormat(this.y * 1, 1)) + "</b><br>" + "" + ": <b>" + this.point.z + "</b>";
  
						  /////////////////////for single tooltip not bubble////////////////////////////////////////////////////////////////// 	
  
							  } else if (false == false) {
								  if (this.point.high){ ///for ranges
									   var s = '<b>' + this.series.name + '</b><br>' + this.x + "<br>High: <b>" + negDollarFormat(Highcharts.numberFormat(makeAbsoluteIfButterfly(this.point.high * 1), 1)) + '' + '</b>'+ "<br>Low: <b>" + negDollarFormat(Highcharts.numberFormat(makeAbsoluteIfButterfly(this.point.low * 1), 1)) + '' + '</b>';
							  
								  }else{///for not ranges
										var s = '<b>' + this.series.name + '</b><br>' + this.x + ": <b>" + negDollarFormat(Highcharts.numberFormat(makeAbsoluteIfButterfly(this.y * 1), 1)) + '' + '</b>';
								  }
								  
							  } else { //////////////////////for shared tooltip ////////////////////////////////////////////////////////////////////////
  
								  var s = '<b>' + this.x + '</b>';
  
								  $.each(this.points, function (i, point) {
										  if (this.point.high){ ///for ranges
											   s += '<br/><span style="color: ' + point.series.color + '">' + point.series.name + '</span><br>High: <b>' + negDollarFormat(Highcharts.numberFormat(makeAbsoluteIfButterfly(this.point.high * 1), 1)) + '' + '</b><br>Low: <b>' + negDollarFormat(Highcharts.numberFormat(makeAbsoluteIfButterfly(this.point.low * 1), 1)) + '' + '</b>';
										  }else{ ///not ranges
									  s += '<br/><span style="color: ' + point.series.color + '">' + point.series.name + '</span>: <b>' + negDollarFormat(Highcharts.numberFormat(makeAbsoluteIfButterfly(point.y * 1), 1)) + '' + '</b>';
										  }
  
  
  
								  });
  
  
  
  
  
							  }
  
							  return s;
  
						  },
  
						  shared: false
  
  
  
					  },
  
  
  
  
  
  
  
  
  
  
  
					  /////////////////PLOT OPTIONS///////////////////
  
					  plotOptions: {
  
						  series: {
  
  
  
  
							  /* un note to turn off legend click - remember to change cursor to "default" in legend properties
  
				  events: {
  
			  legendItemClick: function () {
  
				  return false; 
  
			  }
  
				  },
  
			  */
  
							  dataLabels: {
  
								  enabled: false
  
							  },
  
							  pointPadding: 0.1, //padding between points in bar charts  (0 is tight)1 is loose
  
							  groupPadding: 0.2, // padding between groups in bar charts (0 is tight)1 is loose
  
							  maxSize: 50, //for bubble sizes
  
							  sizeBy: 'width', //for bubble sizing, instead of 'area'
  
							  pointPlacement: null,
  
							  stacking: null,
  
							  borderWidth: 0,
  
  
  
							  shadow: false,
  
							  animation: true
  
						  },
  
  
  
						  line: {
  
							  lineWidth: 1.5,
  
							  states: {
  
								  hover: {
  
									  lineWidth: 4
  
								  }
  
							  },
  
							  marker: {
  
								  enabled: true,
  
								  //status of tick symbols
  
								  states: {
  
									  hover: {
  
										  enabled: true,
  
										  radius: 5
  
  
  
									  }
  
								  }
  
							  }
  
  
  
						  }
  
  
  
  
  
					  },
  
  
  
  
  
  
  
					  credits: {
  
						  text: "Click legend items to change data display. Hover over chart to view data.<br>Source: U.S. Bureau of Labor Statistics.",
  
						  position: {
  
							  align: 'left',
  
							  x: 10,
  
							  y: -25
  
						  },
  
						  style: {
  
							  cursor: "default" //color: "black"
  
  
  
						  },
  
						  href: ""
  
					  },
  
  
  
					  exporting: {
  
						  buttons: {
  
							  contextButton: {
  
  
  
  
  
								  enabled: true,
  
								  verticalAlign: 'bottom',
  
								  x: -10
  
  
  
							  }
  
  
  
  
  
						  }
  
					  }
  
				  }
  
  
  
			  );
  
  
  
			  window.chart2_chart = chart2_chart;
  
  
  
  
  
  
  
  
  
  
  
			  /* Saved chart information - paste this into chartmaker to load chart
  
  
  
  {"chartType":"line","dataLabelsEnabled":false,"isStacked":false,"chartPointPadding":0.1,"chartGroupPadding":0.2,"chartWidth":"580","chartHeight":"400","chartID":"chart2","useMLRStyles":false,"chartIsInverted":false,"chartIsZoom":"null","addRecession":false,"margins":{"top":"70","bottom":"60","left":"50","right":"120"},"xAxis":{"title":"","tickInterval":"3"},"yAxis":{"title":"","titleIndent":"35","autoInterval":true,"yAxisIsLog":false,"signs":"noSigns","tickInterval":"10","forcedDecimal":"1","divide":"1"},"legend":{"layout":"vertical","x":"230","y":"70","legendIsReversed":false},"tooltip":{"isShared":false,"forcedDecimal":"1","signs":"noSigns","multiple":"1"},"credits":{"text":"Click legend items to change data display. Hover over chart to view data.<br>Source: U.S. Bureau of Labor Statistics.","yPos":"-25"},"fromTableChecked":false,"fromTable":{"loadFrom":"rowsSelected","data":" ","colorRow":-1},"fromManual":{"title":"Weekly earnings ratios between higher and lower percentiles of full-time wage and salary workers, 1979�2013","subTitle":"","xCategories":"\"1979\",\"1980\",\"1981\",\"1982\",\"1983\",\"1984\",\"1985\",\"1986\",\"1987\",\"1988\",\"1989\",\"1990\",\"1991\",\"1992\",\"1993\",\"1994\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\"","seriesInfo":[{"title":"90th to 75th ","data":"1.36,1.34,1.34,1.37,1.35,1.37,1.39,1.41,1.43,1.41,1.39,1.42,1.43,1.42,1.43,1.42,1.42,1.43,1.46,1.46,1.47,1.47,1.5,1.49,1.5,1.5,1.51,1.5,1.5,1.5,1.52,1.53,1.54,1.55,1.53","seriesType":"line","lineStyle":"LongDash","isVisible":false,"color":"rgb(100, 100, 100)"},{"title":"90th to 50th ","data":"1.94,1.92,1.92,1.97,1.98,2.02,2.02,2.02,2.04,2.06,2.05,2.1,2.12,2.12,2.13,2.13,2.13,2.16,2.2,2.21,2.21,2.19,2.25,2.26,2.29,2.29,2.31,2.3,2.3,2.35,2.36,2.37,2.38,2.44,2.44","seriesType":"line","lineStyle":"LongDash","isVisible":false,"color":"rgb(255, 0, 0)"},{"title":"90th to 25th  ","data":"2.8,2.76,2.77,2.85,2.88,2.96,3,3.01,3.04,3.06,3.02,3.08,3.1,3.14,3.21,3.25,3.28,3.32,3.37,3.33,3.32,3.32,3.39,3.41,3.44,3.47,3.51,3.47,3.45,3.49,3.54,3.59,3.61,3.72,3.7","seriesType":"line","lineStyle":"Solid","isVisible":true,"color":"rgb(255, 0, 0)"},{"title":"90th to 10th ","data":"3.72,3.67,3.67,3.86,3.92,4.03,4.12,4.14,4.21,4.27,4.22,4.28,4.25,4.34,4.41,4.52,4.5,4.54,4.59,4.51,4.51,4.49,4.63,4.66,4.72,4.78,4.86,4.84,4.85,4.9,4.99,5.01,5.03,5.23,5.08","seriesType":"line","lineStyle":"Solid","isVisible":true,"color":"rgb(0, 0, 255)"},{"title":"75th to 50th ","data":"1.43,1.43,1.43,1.44,1.47,1.48,1.46,1.44,1.43,1.46,1.48,1.48,1.48,1.49,1.48,1.5,1.5,1.51,1.51,1.51,1.5,1.49,1.5,1.52,1.53,1.52,1.53,1.53,1.54,1.56,1.55,1.55,1.55,1.57,1.59","seriesType":"line","lineStyle":"DashDot","isVisible":false,"color":"rgb(99, 0, 220)"},{"title":"75th to 25th ","data":"2.06,2.06,2.07,2.09,2.13,2.17,2.16,2.14,2.13,2.17,2.18,2.17,2.17,2.21,2.24,2.29,2.31,2.31,2.31,2.27,2.26,2.26,2.26,2.28,2.3,2.31,2.32,2.31,2.31,2.32,2.33,2.35,2.35,2.4,2.42","seriesType":"line","lineStyle":"Solid","isVisible":true,"color":"rgb(103, 0, 220)"},{"title":"75th to 10th ","data":"2.73,2.74,2.75,2.83,2.91,2.95,2.97,2.94,2.95,3.03,3.04,3.02,2.98,3.06,3.07,3.19,3.17,3.17,3.14,3.08,3.07,3.05,3.09,3.13,3.15,3.18,3.22,3.22,3.24,3.26,3.28,3.27,3.28,3.37,3.33","seriesType":"line","lineStyle":"Solid","isVisible":true,"color":"rgb(0, 255, 51)"},{"title":"50th to 25th ","data":"1.44,1.44,1.45,1.45,1.46,1.46,1.48,1.49,1.49,1.48,1.47,1.47,1.46,1.48,1.51,1.53,1.54,1.54,1.53,1.51,1.51,1.52,1.5,1.51,1.5,1.52,1.52,1.51,1.5,1.49,1.5,1.52,1.51,1.52,1.52","seriesType":"line","lineStyle":"DashDot","isVisible":false,"color":"rgb(0, 255, 0)"},{"title":"50th to 10th ","data":"1.92,1.91,1.92,1.96,1.98,1.99,2.04,2.05,2.06,2.07,2.06,2.04,2.01,2.05,2.07,2.12,2.11,2.1,2.08,2.04,2.04,2.05,2.05,2.06,2.06,2.09,2.1,2.1,2.11,2.09,2.11,2.11,2.11,2.14,2.09","seriesType":"line","lineStyle":"Solid","isVisible":true,"color":"rgb(100, 100, 100)"},{"title":"25th to 10th ","data":"1.33,1.33,1.32,1.35,1.36,1.36,1.37,1.38,1.38,1.4,1.4,1.39,1.37,1.38,1.37,1.39,1.37,1.37,1.36,1.36,1.36,1.35,1.36,1.37,1.37,1.38,1.38,1.39,1.4,1.4,1.41,1.39,1.39,1.41,1.37","seriesType":"line","lineStyle":"DashDot","isVisible":false,"color":"rgb(0, 0, 250)"}]},"histogram":{"chartTitle":"Title Goes Here","subTitle":"","histogramNumberOfColumns":"5","histogramSeriesTitle":"Series","histogramSeriesData":"40,23,13,15,18,40,45,32,10,20,5,10,41,40","color":"rgb(47, 126, 216)"},"bubble":{"chartTitle":"Title Goes Here","chartSubTitle":"Bubble size represents... ","bubbleMaxSize":"50","bubbleSizeText":"","seriesInfo":[{"title":"Series 1","x":"","y":"","r":"","isVisible":true,"color":"rgb(139, 188, 33)"},{"title":"Series 2","x":"","y":"","r":"","isVisible":true,"color":"rgb(139, 188, 33)"}]}}
  
  
  
  */
  
  
  
  
  
  
  
  
  
  
  
  
  
  
		  }
  );